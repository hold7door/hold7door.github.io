<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Arpit Pathak</title><link>https://hold7door.github.io/</link><description>Recent content on Arpit Pathak</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© Copyright notice</copyright><lastBuildDate>Sun, 05 Jun 2022 00:01:58 +0530</lastBuildDate><atom:link href="https://hold7door.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title>Implementing domain based Multi-tenancy - 2</title><link>https://hold7door.github.io/posts/post-4/</link><pubDate>Sun, 05 Jun 2022 00:01:58 +0530</pubDate><guid>https://hold7door.github.io/posts/post-4/</guid><description>In the previous post I showed you how to set up a NextJs application to serve pages based on users custom domain.
If you haven&amp;rsquo;t read the previous article follow here for Part 1. Otherwise please continue reading
The main problem now remains is to dynamically provision HTTPS certificates for the newly created domains so that data can be served over TLS. For this we use Openresty which is wrapper around Nginx and provides inbuilt support for Lua programming language.</description></item><item><title>Implementing domain based Multi-tenancy - 1</title><link>https://hold7door.github.io/posts/post-3/</link><pubDate>Sat, 19 Feb 2022 02:01:58 +0530</pubDate><guid>https://hold7door.github.io/posts/post-3/</guid><description>In normal scenerios, you build a web-application and host it on a server. Then you purchase a domain which you then link to this server&amp;rsquo;s IP. Other users can then access the web-application using this domain of yours.
However, often times you also want to give the users the ability to map their own domains to a web application which is hosted on a server which you control. Now the users can open the web-application on their own domains as well.</description></item><item><title>Maximum Gap</title><link>https://hold7door.github.io/posts/post-2/</link><pubDate>Sun, 17 Jan 2021 02:01:58 +0530</pubDate><guid>https://hold7door.github.io/posts/post-2/</guid><description>Problem Given an unsorted array, find the maximum difference between the successive elements in its sorted form.
Constraints All elements in the array are non-negative integers and fit in the 32-bit signed integer range.
Solution On first look one can notice that it is easy to solve this problem in O(nlogn) time by first sorting the array and finding maximum difference between consecutive numbers.
Now think about if you were asked to solve this in O(n) time, where n is length of array</description></item><item><title>Kickstart Round G 2020 Combination Lock</title><link>https://hold7door.github.io/posts/post-1/</link><pubDate>Sat, 02 Jan 2021 02:01:58 +0530</pubDate><guid>https://hold7door.github.io/posts/post-1/</guid><description>This is a reiteration of the official Editorial supported with code. Link to Problem -Combination Lock. I would suggest you to read the original problem statement first before going through this editorial.
Problem Your are given an array of numbers of length W and an integer N. Each number of array, let&amp;rsquo;s say Wi is in range 1 &amp;lt;= Wi&amp;lt;= N. In one move you can select any number from the array and increase/decrease that number by 1, wrapping around between 1 and N.</description></item><item><title>Hey</title><link>https://hold7door.github.io/about/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://hold7door.github.io/about/</guid><description>I am Arpit.
I am currently working at SalaryBox where I work as a Backend Developer.
I can write code in - Python, Javascript and C++. Recently, I have been learning Go. Check out my github for some simple simulations I have been writing for fun alongside learning Go.
I am interested in distributed systems, networks, monitoring and observability (and a lot of various random stuff hard to list down).</description></item></channel></rss>